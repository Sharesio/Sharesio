import requests
from pymessenger.bot import Bot

from sharesio.config import config
from sharesio.log import log
from sharesio.quick_reply import QuickReplies
from sharesio.repository import ImageInMemoryRepository, UserInMemoryRepository, User


class MessengerBot:
    def __init__(self):
        self._bot = Bot(config['page_access_token'])
        self._facebook_api_url = self._bot.graph_url
        self._image_repository = ImageInMemoryRepository()
        self._user_repository = UserInMemoryRepository()

    def on_text_message(self, sender_id, text_message):
        log(f"[{sender_id}] - received text message: {text_message}")

        # TODO: replace this with a 'Get started' button (https://developers.facebook.com/docs/messenger-platform/reference/messenger-profile-api)
        if text_message.lower() == 'start':
            person_details = self._get_person_details(sender_id)
            # TODO: do something with profile picture: person_details['profile_pic']
            user = User(sender_id, person_details['first_name'], person_details['last_name'])
            self._user_repository.save(user)
            self._bot.send_text_message(recipient_id=sender_id, message=f"User {user} was successfully added")

        elif text_message.lower() == 'count':
            images = self._image_repository.find_all_by_user_id(sender_id)
            self._bot.send_text_message(recipient_id=sender_id, message=f"You sent {len(images)} unique pictures")

        elif text_message.lower() == 'hi':
            self._send_quick_reply(sender_id, 'Do you want a cookie?', QuickReplies.yes_or_no())

    def on_attachment(self, sender_id, attachment):
        log(f"[{sender_id}] - received attachment: {attachment}")
        if attachment['type'] == 'image':
            self._on_image_attachment(sender_id, attachment)
        else:
            response = f"Attachment of type [{attachment['type']}] is not supported"
            self._bot.send_text_message(recipient_id=sender_id, message=response)

    def _on_image_attachment(self, sender_id, image_attachment):
        # TODO: verify if this url is permanent (it is generated by Facebook so it might just be a temporary url)
        url = image_attachment['payload']['url']
        self._image_repository.save(sender_id, url)
        self._bot.send_text_message(recipient_id=sender_id, message='Image was successfully submitted')

    def _get_person_details(self, id):
        request_endpoint = f"{self._facebook_api_url}/{id}?fields=first_name,last_name,profile_pic&access_token={config['page_access_token']}"
        return requests.get(request_endpoint).json()

    def _send_quick_reply(self, recipient_id, message, quick_replies):
        payload = {
            'recipient': {
                'id': recipient_id
            },
            'messaging_type': 'RESPONSE',
            'message': {
                'text': message,
                'quick_replies': [q.to_text_payload() for q in quick_replies]
            }
        }
        return self._bot.send_raw(payload)
